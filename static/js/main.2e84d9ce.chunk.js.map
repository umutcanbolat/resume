{"version":3,"sources":["components/SocialItem.jsx","components/SocialLinks.jsx","components/SectionHeader.jsx","utils/dateUtils.js","components/WorkExperience.jsx","components/Highlighter.jsx","components/ExperienceList.jsx","components/DescribedItem.jsx","components/Publication.jsx","sections/Header.jsx","sections/PersonalProjects.jsx","sections/Publications.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["StyledSocialItem","styled","div","SocialItem","image","text","href","className","target","rel","StyledSocialLinks","socialData","id","SocialLinks","links","map","StyledSectionHeader","SectionHeader","title","getFormattedDate","date","dateFormat","dateObj","Date","year","getFullYear","month","toLocaleString","StyledWorkExperience","WorkExperience","content","companyName","companyUrl","children","length","c","i","Item","color","props","roleName","name","location","startDate","endDate","roleChildren","StyledRole","Role","StyledSingleRoleWorkExperience","SingleRoleWorkExperience","Highlighter","searchWords","techKeywords","textToHighlight","StyledList","ExperienceList","data","company","url","roles","roleId","role","descriptions","projects","item","about","projectItems","StyledDescribedItem","icons","github","web","chromeWebStore","npm","DescribedItem","Object","entries","platform","desc","StyledPublication","Publication","publisher","link","StyledHeader","Header","StyledProjects","PersonalProjects","StyledPublications","Publications","App","experiences","education","personalProjects","publications","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Helmet","document","getElementById"],"mappings":"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","file":"static/js/main.2e84d9ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSocialItem = styled.div`\r\n  svg {\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n  a {\r\n    color: black;\r\n    padding-left: 0.4rem;\r\n    font-family: 'DM Mono', monospace;\r\n  }\r\n\r\n  .social-item {\r\n    width: fit-content;\r\n\r\n    display: flex;\r\n    flex-flow: row;\r\n    align-items: center;\r\n  }\r\n\r\n  color: black;\r\n`;\r\n\r\nexport default function SocialItem({ image, text, href }) {\r\n  return (\r\n    <StyledSocialItem>\r\n      <div className=\"social-item\">\r\n        {image}\r\n        <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {text}\r\n        </a>\r\n      </div>\r\n    </StyledSocialItem>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FaLinkedinIn } from 'react-icons/fa';\r\nimport { VscGlobe } from 'react-icons/vsc';\r\nimport { FiMail, FiGithub } from 'react-icons/fi';\r\n\r\nimport SocialItem from './SocialItem';\r\n\r\nconst StyledSocialLinks = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n\r\n  .item {\r\n    padding: 0.3rem 0.44rem;\r\n  }\r\n`;\r\n\r\nconst socialData = [\r\n  {\r\n    id: 'github',\r\n    image: <FiGithub />,\r\n    text: '/umutcanbolat',\r\n    href: 'https://www.github.com/umutcanbolat',\r\n  },\r\n  {\r\n    id: 'linkedin',\r\n    image: <FaLinkedinIn />,\r\n    text: '/umutcanbolat',\r\n    href: 'https://www.linkedin.com/in/umutcanbolat',\r\n  },\r\n  {\r\n    id: 'web',\r\n    image: <VscGlobe />,\r\n    text: 'umutcanbolat.com',\r\n    href: 'https://www.umutcanbolat.com',\r\n  },\r\n  {\r\n    id: 'email',\r\n    image: <FiMail />,\r\n    text: 'hello@umutcanbolat.com',\r\n    href: 'mailto:hello@umutcanbolat.com',\r\n  },\r\n];\r\n\r\nexport default function SocialLinks() {\r\n  const links = socialData.map(({ id, image, text, href }) => (\r\n    <div key={id} className=\"item\">\r\n      <SocialItem image={image} text={text} href={href} />\r\n    </div>\r\n  ));\r\n  return <StyledSocialLinks>{links}</StyledSocialLinks>;\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSectionHeader = styled.div`\r\n  header {\r\n    border-bottom: 1px solid black;\r\n    margin-bottom: 0.8rem;\r\n  }\r\n\r\n  h2 {\r\n    margin: 0;\r\n    font-family: 'Noto Serif', serif;\r\n    font-size: 1.45rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport default function SectionHeader({ title }) {\r\n  return (\r\n    <StyledSectionHeader>\r\n      <header>\r\n        <h2>{title}</h2>\r\n      </header>\r\n    </StyledSectionHeader>\r\n  );\r\n}\r\n","/* eslint-disable import/prefer-default-export */\r\n/**\r\n * Returns a date string like `Sep. 2021`.\r\n *\r\n * @param {string} date string\r\n * @returns {string} the formatted date string.\r\n *\r\n */\r\nexport const getFormattedDate = (date, dateFormat) => {\r\n  const dateObj = new Date(date);\r\n\r\n  const year = dateObj.getFullYear();\r\n  const month = dateObj.toLocaleString('default', { month: 'short' });\r\n\r\n  switch (dateFormat) {\r\n    case 'year':\r\n      return `${year}`;\r\n    case 'month':\r\n    default:\r\n      return `${month}. ${year}`;\r\n  }\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Timeline } from 'antd';\r\nimport { getFormattedDate } from '../utils/dateUtils';\r\n\r\nconst StyledWorkExperience = styled.div`\r\n  &:not(:last-child) {\r\n    margin-bottom: 0.9em;\r\n  }\r\n  h3 {\r\n    font-size: 1.1rem;\r\n    margin-bottom: 0.8em;\r\n  }\r\n  .timeline {\r\n    margin-left: 0.5rem;\r\n  }\r\n  h3 > a {\r\n    color: black;\r\n  }\r\n`;\r\n\r\nexport default function WorkExperience({ companyName, companyUrl, children }) {\r\n  let content;\r\n  if (children.length > 1) {\r\n    content = (\r\n      <>\r\n        <h3>\r\n          <a href={companyUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {companyName}\r\n          </a>\r\n        </h3>\r\n        <div className=\"timeline\">\r\n          <Timeline>\r\n            {children.map((c, i) => (\r\n              <Timeline.Item key={i} color=\"gray\">\r\n                {c}\r\n              </Timeline.Item>\r\n            ))}\r\n          </Timeline>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    const {\r\n      name: roleName,\r\n      location,\r\n      startDate,\r\n      endDate,\r\n      dateFormat,\r\n      children: roleChildren,\r\n    } = children[0].props;\r\n    content = (\r\n      <SingleRoleWorkExperience\r\n        companyName={companyName}\r\n        companyUrl={companyUrl}\r\n        roleName={roleName}\r\n        location={location}\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n        dateFormat={dateFormat}\r\n      >\r\n        {roleChildren}\r\n      </SingleRoleWorkExperience>\r\n    );\r\n  }\r\n  return <StyledWorkExperience>{content}</StyledWorkExperience>;\r\n}\r\n\r\nconst StyledRole = styled.div`\r\n  .heading {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  header {\r\n    display: flex;\r\n    flex-flow: column;\r\n  }\r\n\r\n  h4 {\r\n    margin: 0;\r\n    font-size: 0.95rem;\r\n  }\r\n\r\n  .location {\r\n    color: dimgray;\r\n    margin-top: -0.22em;\r\n  }\r\n\r\n  .years {\r\n    font-style: italic;\r\n    color: dimgray;\r\n  }\r\n\r\n  .details {\r\n    margin-top: 0.17rem;\r\n  }\r\n`;\r\n\r\nconst Role = ({ name, location, startDate, endDate, children, dateFormat = 'month' }) => (\r\n  <StyledRole>\r\n    <header>\r\n      <div className=\"heading\">\r\n        <h4 className=\"role-title\">{name}</h4>\r\n        <span className=\"years\">{`${getFormattedDate(startDate, dateFormat)} - ${\r\n          endDate ? getFormattedDate(endDate, dateFormat) : 'present'\r\n        }`}</span>\r\n      </div>\r\n      <span className=\"location\">{location}</span>\r\n    </header>\r\n\r\n    <div className=\"details\">{children}</div>\r\n  </StyledRole>\r\n);\r\n\r\nWorkExperience.Role = Role;\r\n\r\nconst StyledSingleRoleWorkExperience = styled.div`\r\n  .role-title {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst SingleRoleWorkExperience = ({\r\n  companyName,\r\n  companyUrl,\r\n  roleName,\r\n  location,\r\n  startDate,\r\n  endDate,\r\n  dateFormat,\r\n  children,\r\n}) => {\r\n  const name = (\r\n    <>\r\n      <span>{roleName} • </span>\r\n      <a href={companyUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {companyName}\r\n      </a>\r\n    </>\r\n  );\r\n  return (\r\n    <StyledSingleRoleWorkExperience>\r\n      <Role\r\n        name={name}\r\n        location={location}\r\n        startDate={startDate}\r\n        endDate={endDate}\r\n        dateFormat={dateFormat}\r\n      >\r\n        {children}\r\n      </Role>\r\n    </StyledSingleRoleWorkExperience>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Highlight from 'react-highlight-words';\r\n\r\nimport techKeywords from '../static/techKeywords.json';\r\n\r\nexport default function Highlighter({ text }) {\r\n  return <Highlight searchWords={techKeywords} textToHighlight={text} className=\"description\" />;\r\n}\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport SectionHeader from './SectionHeader';\r\nimport WorkExperience from './WorkExperience';\r\nimport Highlighter from './Highlighter';\r\n\r\nconst StyledList = styled.div`\r\n  ul.role-description {\r\n    list-style-type: disc;\r\n    padding-left: 1.5rem;\r\n  }\r\n\r\n  .role-description > li:not(:last-child) {\r\n    margin-bottom: 0.22em;\r\n  }\r\n\r\n  .role-description > li {\r\n    font-size: 0.79rem;\r\n  }\r\n\r\n  .ant-timeline-item {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  .ant-timeline-item-last {\r\n    padding-bottom: 0;\r\n    margin-bottom: -0.2rem;\r\n  }\r\n`;\r\n\r\nexport default function ExperienceList({ title, data, dateFormat = 'month' }) {\r\n  return (\r\n    <StyledList>\r\n      <SectionHeader title={title} />\r\n      {data.map(({ id, company, url, roles }) => (\r\n        <WorkExperience key={id} companyName={company} companyUrl={url}>\r\n          {roles.map(\r\n            ({ id: roleId, role, location, startDate, endDate, descriptions, projects }) => (\r\n              <WorkExperience.Role\r\n                key={roleId}\r\n                name={role}\r\n                location={location}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                dateFormat={dateFormat}\r\n              >\r\n                <ul className=\"role-description\">\r\n                  {descriptions?.map((item, i) => (\r\n                    <li key={i} className=\"role-item\">\r\n                      <Highlighter text={item} />\r\n                    </li>\r\n                  ))}\r\n                  {projects?.map(({ name, about, descriptions: projectItems }) => (\r\n                    <li key={name} className=\"role-item\">\r\n                      <Highlighter text={about} />\r\n                      <ul className=\"role-description\">\r\n                        {projectItems?.map((item, i) => (\r\n                          <li key={i} className=\"role-item\">\r\n                            <Highlighter text={item} />\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </WorkExperience.Role>\r\n            ),\r\n          )}\r\n        </WorkExperience>\r\n      ))}\r\n    </StyledList>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FiGithub, FiChrome, FiGlobe } from 'react-icons/fi';\r\nimport { ImNpm } from 'react-icons/im';\r\n\r\nimport Highlighter from './Highlighter';\r\n\r\nconst StyledDescribedItem = styled.div`\r\n  ul {\r\n    display: flex;\r\n    align-items: center;\r\n    list-style-type: none;\r\n    padding: unset;\r\n    margin: 0;\r\n    margin-left: 0.6rem;\r\n  }\r\n\r\n  li {\r\n    font-size: 1.1rem;\r\n  }\r\n\r\n  li:not(:last-child) {\r\n    margin-right: 0.4em;\r\n  }\r\n\r\n  a {\r\n    color: black;\r\n  }\r\n\r\n  header {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 0.2rem;\r\n  }\r\n\r\n  h3 {\r\n    margin: 0;\r\n  }\r\n\r\n  p {\r\n    margin-bottom: 0.5em;\r\n  }\r\n`;\r\n\r\nconst icons = {\r\n  github: <FiGithub />,\r\n  web: <FiGlobe />,\r\n  chromeWebStore: <FiChrome />,\r\n  npm: <ImNpm />,\r\n};\r\n\r\nexport default function DescribedItem({ name, descriptions, links }) {\r\n  return (\r\n    <StyledDescribedItem>\r\n      <header>\r\n        <h3>{name}</h3>\r\n        <ul>\r\n          {Object.entries(links).map(([platform, url]) => (\r\n            <li key={platform}>\r\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {icons[platform]}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </header>\r\n      {descriptions.map((desc) => (\r\n        <p key={desc}>\r\n          <Highlighter text={desc} />\r\n        </p>\r\n      ))}\r\n    </StyledDescribedItem>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Highlighter from './Highlighter';\r\nimport { getFormattedDate } from '../utils/dateUtils';\r\n\r\nconst StyledPublication = styled.div`\r\n  .heading {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  header {\r\n    display: flex;\r\n    flex-flow: column;\r\n  }\r\n\r\n  h4 {\r\n    margin: 0;\r\n    font-size: 0.95rem;\r\n    width: 80%;\r\n  }\r\n\r\n  .date {\r\n    font-style: italic;\r\n    color: dimgray;\r\n  }\r\n\r\n  .description {\r\n    margin-top: 0.17rem;\r\n  }\r\n`;\r\n\r\nexport default function Publication({ name, descriptions, date, publisher, link }) {\r\n  return (\r\n    <StyledPublication>\r\n      <header>\r\n        <div className=\"heading\">\r\n          <h4 className=\"role-title\">\r\n            <span>{name} • </span>\r\n            <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {publisher}\r\n            </a>\r\n          </h4>\r\n          <span className=\"date\">{getFormattedDate(date)}</span>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"description\">\r\n        {descriptions.map((desc) => (\r\n          <Highlighter key={desc} text={desc} />\r\n        ))}\r\n      </div>\r\n    </StyledPublication>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { SocialLinks } from '../components';\r\n\r\nconst StyledHeader = styled.div`\r\n  padding-bottom: 0.8rem;\r\n  h1 {\r\n    font-size: 2.2rem;\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n    font-family: 'Lobster', cursive;\r\n  }\r\n  p {\r\n    width: fit-content;\r\n    margin: 0 auto;\r\n    font-family: 'Noto Serif', serif;\r\n    margin-top: -0.4rem;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nexport default function Header({ name, title }) {\r\n  return (\r\n    <StyledHeader>\r\n      <h1>{name}</h1>\r\n      <p>{title}</p>\r\n      <SocialLinks />\r\n    </StyledHeader>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { SectionHeader, DescribedItem } from '../components';\r\n\r\nconst StyledProjects = styled.div`\r\n  & {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  .project:not(:last-child) {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport default function PersonalProjects({ data }) {\r\n  return (\r\n    <StyledProjects>\r\n      <SectionHeader title=\"Personal Projects\" />\r\n      {data.map(({ name, descriptions, links }) => (\r\n        <div key={name} className=\"project\">\r\n          <DescribedItem name={name} descriptions={descriptions} links={links} />\r\n        </div>\r\n      ))}\r\n    </StyledProjects>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { SectionHeader, Publication } from '../components';\r\n\r\nconst StyledPublications = styled.div`\r\n  .publication:not(:last-child) {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport default function Publications({ data }) {\r\n  return (\r\n    <StyledPublications>\r\n      <SectionHeader title=\"Publications\" />\r\n      {data.map(({ name, descriptions, date, publisher, link }) => (\r\n        <div key={name} className=\"publication\">\r\n          <Publication\r\n            name={name}\r\n            descriptions={descriptions}\r\n            date={date}\r\n            publisher={publisher}\r\n            link={link}\r\n          />\r\n        </div>\r\n      ))}\r\n    </StyledPublications>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Header, PersonalProjects, Publications } from './sections';\r\nimport { ExperienceList } from './components';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nimport data from './static/data.json';\r\n\r\nfunction App() {\r\n  const { name, title, experiences, education, personalProjects, publications } = data;\r\n\r\n  return (\r\n    <>\r\n      <section className=\"sheet padding-10mm\">\r\n        <Header name={name} title={title} />\r\n        <ExperienceList title=\"Experience\" data={experiences} />\r\n        <ExperienceList title=\"Education\" dateFormat=\"year\" data={education} />\r\n      </section>\r\n      <section className=\"sheet padding-10mm\">\r\n        <PersonalProjects data={personalProjects} />\r\n        <Publications data={publications} />\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport data from './static/data.json';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Helmet>\r\n      <title>{data.name}</title>\r\n      <meta name=\"description\" content={`Resume of ${data.name}`} />\r\n    </Helmet>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}