{"version":3,"sources":["components/SocialItem.jsx","components/SocialLinks.jsx","components/SectionHeader.jsx","utils/dateUtils.js","components/WorkExperience.jsx","components/Highlighter.jsx","components/ExperienceList.jsx","components/DescribedItem.jsx","components/Publication.jsx","sections/Header.jsx","sections/PersonalProjects.jsx","sections/Publications.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["StyledSocialItem","styled","div","SocialItem","image","text","href","className","target","rel","StyledSocialLinks","socialIcons","github","linkedin","web","email","SocialLinks","links","data","map","socialId","id","StyledSectionHeader","SectionHeader","title","getFormattedDate","date","dateFormat","dateObj","Date","year","getFullYear","month","toLocaleString","StyledWorkExperience","WorkExperience","content","companyName","companyUrl","children","length","c","i","Item","color","props","roleName","name","location","startDate","endDate","roleChildren","StyledRole","Role","StyledSingleRoleWorkExperience","SingleRoleWorkExperience","Highlighter","searchWords","techKeywords","textToHighlight","StyledList","ExperienceList","company","url","roles","roleId","role","descriptions","projects","item","about","projectItems","StyledDescribedItem","icons","chromeWebStore","npm","DescribedItem","Object","entries","platform","desc","StyledPublication","Publication","publisher","link","StyledHeader","Header","social","StyledProjects","PersonalProjects","StyledPublications","Publications","App","experiences","education","personalProjects","publications","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Helmet","document","getElementById"],"mappings":"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","file":"static/js/main.a221e5e3.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSocialItem = styled.div`\n  svg {\n    font-size: 1.3rem;\n  }\n\n  a {\n    color: black;\n    padding-left: 0.4rem;\n    font-family: 'DM Mono', monospace;\n  }\n\n  .social-item {\n    width: fit-content;\n\n    display: flex;\n    flex-flow: row;\n    align-items: center;\n  }\n\n  color: black;\n`;\n\nexport default function SocialItem({ image, text, href }) {\n  return (\n    <StyledSocialItem>\n      <div className=\"social-item\">\n        {image}\n        <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n          {text}\n        </a>\n      </div>\n    </StyledSocialItem>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FaLinkedinIn } from 'react-icons/fa';\nimport { VscGlobe } from 'react-icons/vsc';\nimport { FiMail, FiGithub } from 'react-icons/fi';\n\nimport SocialItem from './SocialItem';\n\nconst StyledSocialLinks = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n\n  .item {\n    padding: 0.3rem 0.44rem;\n  }\n`;\n\nconst socialIcons = {\n  github: <FiGithub />,\n  linkedin: <FaLinkedinIn />,\n  web: <VscGlobe />,\n  email: <FiMail />,\n};\n\nconst getImageComponent = (socialId) => socialIcons[socialId] || socialIcons.web;\n\nexport default function SocialLinks({ data }) {\n  const links = data.map(({ id, text, href }) => (\n    <div key={id} className=\"item\">\n      <SocialItem image={getImageComponent(id)} text={text} href={href} />\n    </div>\n  ));\n  return <StyledSocialLinks>{links}</StyledSocialLinks>;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSectionHeader = styled.div`\n  header {\n    border-bottom: 1px solid black;\n    margin-bottom: 0.8rem;\n  }\n\n  h2 {\n    margin: 0;\n    font-family: 'Noto Serif', serif;\n    font-size: 1.45rem;\n    font-weight: bold;\n  }\n`;\n\nexport default function SectionHeader({ title }) {\n  return (\n    <StyledSectionHeader>\n      <header>\n        <h2>{title}</h2>\n      </header>\n    </StyledSectionHeader>\n  );\n}\n","/* eslint-disable import/prefer-default-export */\n/**\n * Returns a date string like `Sep. 2021`.\n *\n * @param {string} date string\n * @returns {string} the formatted date string.\n *\n */\nexport const getFormattedDate = (date, dateFormat) => {\n  const dateObj = new Date(date);\n\n  const year = dateObj.getFullYear();\n  const month = dateObj.toLocaleString('default', { month: 'short' });\n\n  switch (dateFormat) {\n    case 'year':\n      return `${year}`;\n    case 'month':\n    default:\n      return `${month}. ${year}`;\n  }\n};\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Timeline } from 'antd';\nimport { getFormattedDate } from '../utils/dateUtils';\n\nconst StyledWorkExperience = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 0.9em;\n  }\n  h3 {\n    font-size: 1.1rem;\n    margin-bottom: 0.8em;\n  }\n  .timeline {\n    margin-left: 0.5rem;\n  }\n  h3 > a {\n    color: black;\n  }\n`;\n\nexport default function WorkExperience({ companyName, companyUrl, children }) {\n  let content;\n  if (children.length > 1) {\n    content = (\n      <>\n        <h3>\n          <a href={companyUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            {companyName}\n          </a>\n        </h3>\n        <div className=\"timeline\">\n          <Timeline>\n            {children.map((c, i) => (\n              <Timeline.Item key={i} color=\"gray\">\n                {c}\n              </Timeline.Item>\n            ))}\n          </Timeline>\n        </div>\n      </>\n    );\n  } else {\n    const {\n      name: roleName,\n      location,\n      startDate,\n      endDate,\n      dateFormat,\n      children: roleChildren,\n    } = children[0].props;\n    content = (\n      <SingleRoleWorkExperience\n        companyName={companyName}\n        companyUrl={companyUrl}\n        roleName={roleName}\n        location={location}\n        startDate={startDate}\n        endDate={endDate}\n        dateFormat={dateFormat}\n      >\n        {roleChildren}\n      </SingleRoleWorkExperience>\n    );\n  }\n  return <StyledWorkExperience>{content}</StyledWorkExperience>;\n}\n\nconst StyledRole = styled.div`\n  .heading {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  header {\n    display: flex;\n    flex-flow: column;\n  }\n\n  h4 {\n    margin: 0;\n    font-size: 0.95rem;\n  }\n\n  .location {\n    color: dimgray;\n    margin-top: -0.22em;\n  }\n\n  .years {\n    font-style: italic;\n    color: dimgray;\n  }\n\n  .details {\n    margin-top: 0.17rem;\n  }\n`;\n\nconst Role = ({ name, location, startDate, endDate, children, dateFormat = 'month' }) => (\n  <StyledRole>\n    <header>\n      <div className=\"heading\">\n        <h4 className=\"role-title\">{name}</h4>\n        <span className=\"years\">{`${getFormattedDate(startDate, dateFormat)} - ${\n          endDate ? getFormattedDate(endDate, dateFormat) : 'present'\n        }`}</span>\n      </div>\n      <span className=\"location\">{location}</span>\n    </header>\n\n    <div className=\"details\">{children}</div>\n  </StyledRole>\n);\n\nWorkExperience.Role = Role;\n\nconst StyledSingleRoleWorkExperience = styled.div`\n  .role-title {\n    margin-bottom: 0;\n  }\n`;\n\nconst SingleRoleWorkExperience = ({\n  companyName,\n  companyUrl,\n  roleName,\n  location,\n  startDate,\n  endDate,\n  dateFormat,\n  children,\n}) => {\n  const name = (\n    <>\n      <span>{roleName} • </span>\n      <a href={companyUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        {companyName}\n      </a>\n    </>\n  );\n  return (\n    <StyledSingleRoleWorkExperience>\n      <Role\n        name={name}\n        location={location}\n        startDate={startDate}\n        endDate={endDate}\n        dateFormat={dateFormat}\n      >\n        {children}\n      </Role>\n    </StyledSingleRoleWorkExperience>\n  );\n};\n","import React from 'react';\nimport Highlight from 'react-highlight-words';\n\nimport techKeywords from '../static/techKeywords.json';\n\nexport default function Highlighter({ text }) {\n  return <Highlight searchWords={techKeywords} textToHighlight={text} className=\"description\" />;\n}\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport SectionHeader from './SectionHeader';\nimport WorkExperience from './WorkExperience';\nimport Highlighter from './Highlighter';\n\nconst StyledList = styled.div`\n  ul.role-description {\n    list-style-type: disc;\n    padding-left: 1.5rem;\n  }\n\n  .role-description > li:not(:last-child) {\n    margin-bottom: 0.22em;\n  }\n\n  .role-description > li {\n    font-size: 0.79rem;\n  }\n\n  .ant-timeline-item {\n    padding-bottom: 10px;\n  }\n\n  .ant-timeline-item-last {\n    padding-bottom: 0;\n    margin-bottom: -0.2rem;\n  }\n`;\n\nexport default function ExperienceList({ title, data, dateFormat = 'month' }) {\n  return (\n    <StyledList>\n      <SectionHeader title={title} />\n      {data.map(({ id, company, url, roles }) => (\n        <WorkExperience key={id} companyName={company} companyUrl={url}>\n          {roles.map(\n            ({ id: roleId, role, location, startDate, endDate, descriptions, projects }) => (\n              <WorkExperience.Role\n                key={roleId}\n                name={role}\n                location={location}\n                startDate={startDate}\n                endDate={endDate}\n                dateFormat={dateFormat}\n              >\n                <ul className=\"role-description\">\n                  {descriptions?.map((item, i) => (\n                    <li key={i} className=\"role-item\">\n                      <Highlighter text={item} />\n                    </li>\n                  ))}\n                  {projects?.map(({ name, about, descriptions: projectItems }) => (\n                    <li key={name} className=\"role-item\">\n                      <Highlighter text={about} />\n                      <ul className=\"role-description\">\n                        {projectItems?.map((item, i) => (\n                          <li key={i} className=\"role-item\">\n                            <Highlighter text={item} />\n                          </li>\n                        ))}\n                      </ul>\n                    </li>\n                  ))}\n                </ul>\n              </WorkExperience.Role>\n            ),\n          )}\n        </WorkExperience>\n      ))}\n    </StyledList>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FiGithub, FiChrome, FiGlobe } from 'react-icons/fi';\nimport { ImNpm } from 'react-icons/im';\n\nimport Highlighter from './Highlighter';\n\nconst StyledDescribedItem = styled.div`\n  ul {\n    display: flex;\n    align-items: center;\n    list-style-type: none;\n    padding: unset;\n    margin: 0;\n    margin-left: 0.6rem;\n  }\n\n  li {\n    font-size: 1.1rem;\n  }\n\n  li:not(:last-child) {\n    margin-right: 0.4em;\n  }\n\n  a {\n    color: black;\n  }\n\n  header {\n    display: flex;\n    align-items: center;\n    margin-bottom: 0.2rem;\n  }\n\n  h3 {\n    margin: 0;\n  }\n\n  p {\n    margin-bottom: 0.5em;\n  }\n`;\n\nconst icons = {\n  github: <FiGithub />,\n  web: <FiGlobe />,\n  chromeWebStore: <FiChrome />,\n  npm: <ImNpm />,\n};\n\nexport default function DescribedItem({ name, descriptions, links }) {\n  return (\n    <StyledDescribedItem>\n      <header>\n        <h3>{name}</h3>\n        <ul>\n          {Object.entries(links).map(([platform, url]) => (\n            <li key={platform}>\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {icons[platform]}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </header>\n      {descriptions.map((desc) => (\n        <p key={desc}>\n          <Highlighter text={desc} />\n        </p>\n      ))}\n    </StyledDescribedItem>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Highlighter from './Highlighter';\nimport { getFormattedDate } from '../utils/dateUtils';\n\nconst StyledPublication = styled.div`\n  .heading {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  header {\n    display: flex;\n    flex-flow: column;\n  }\n\n  h4 {\n    margin: 0;\n    font-size: 0.95rem;\n    width: 80%;\n  }\n\n  .date {\n    font-style: italic;\n    color: dimgray;\n  }\n\n  .description {\n    margin-top: 0.17rem;\n  }\n`;\n\nexport default function Publication({ name, descriptions, date, publisher, link }) {\n  return (\n    <StyledPublication>\n      <header>\n        <div className=\"heading\">\n          <h4 className=\"role-title\">\n            <span>{name} • </span>\n            <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {publisher}\n            </a>\n          </h4>\n          <span className=\"date\">{getFormattedDate(date)}</span>\n        </div>\n      </header>\n\n      <div className=\"description\">\n        {descriptions.map((desc) => (\n          <Highlighter key={desc} text={desc} />\n        ))}\n      </div>\n    </StyledPublication>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { SocialLinks } from '../components';\n\nconst StyledHeader = styled.div`\n  padding-bottom: 0.8rem;\n  h1 {\n    font-size: 2.2rem;\n    width: fit-content;\n    margin: 0 auto;\n    font-family: 'Lobster', cursive;\n  }\n  p {\n    width: fit-content;\n    margin: 0 auto;\n    font-family: 'Noto Serif', serif;\n    margin-top: -0.4rem;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nexport default function Header({ name, title, social }) {\n  return (\n    <StyledHeader>\n      <h1>{name}</h1>\n      <p>{title}</p>\n      <SocialLinks data={social} />\n    </StyledHeader>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { SectionHeader, DescribedItem } from '../components';\n\nconst StyledProjects = styled.div`\n  & {\n    margin-bottom: 1.5rem;\n  }\n  .project:not(:last-child) {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport default function PersonalProjects({ data }) {\n  return (\n    <StyledProjects>\n      <SectionHeader title=\"Personal Projects\" />\n      {data.map(({ name, descriptions, links }) => (\n        <div key={name} className=\"project\">\n          <DescribedItem name={name} descriptions={descriptions} links={links} />\n        </div>\n      ))}\n    </StyledProjects>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { SectionHeader, Publication } from '../components';\n\nconst StyledPublications = styled.div`\n  .publication:not(:last-child) {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport default function Publications({ data }) {\n  return (\n    <StyledPublications>\n      <SectionHeader title=\"Publications\" />\n      {data.map(({ name, descriptions, date, publisher, link }) => (\n        <div key={name} className=\"publication\">\n          <Publication\n            name={name}\n            descriptions={descriptions}\n            date={date}\n            publisher={publisher}\n            link={link}\n          />\n        </div>\n      ))}\n    </StyledPublications>\n  );\n}\n","import React from 'react';\nimport { Header, PersonalProjects, Publications } from './sections';\nimport { ExperienceList } from './components';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nimport data from './static/data.json';\n\nfunction App() {\n  const { name, title, social, experiences, education, personalProjects, publications } = data;\n\n  return (\n    <>\n      <section className=\"sheet padding-10mm\">\n        <Header name={name} title={title} social={social} />\n        <ExperienceList title=\"Experience\" data={experiences} />\n        <ExperienceList title=\"Education\" dateFormat=\"year\" data={education} />\n      </section>\n      <section className=\"sheet padding-10mm\">\n        <PersonalProjects data={personalProjects} />\n        <Publications data={publications} />\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Helmet } from 'react-helmet';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport data from './static/data.json';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Helmet>\n      <title>{data.name}</title>\n      <meta name=\"description\" content={`Resume of ${data.name}`} />\n    </Helmet>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}